#!/usr/bin/env node

var fs = require('fs')
var path = require('path')
var minimist = require('minimist')
var colors = require('colors')
var lib = require('../lib')
var homedir = require('os').homedir()

global.args = minimist(process.argv.slice(2))

if (args.v || args.version) {
  console.log(require('../package.json').version)
  process.exit()
}

function drawLogo(){
  process.stdout.write('\x1B[2J\x1B[0f\u001b[0;0H')
  console.log()
  console.log()
  console.log(' ', '        '.bgWhite.black)
  console.log(' ', '  TIME  '.bgWhite.black,'  TRACKER'.white)
  console.log(' ', '        '.bgWhite.black)
  console.log()
  console.log()
}

if(!fs.existsSync(path.join(homedir, 'timet.json'))){
  lib.setup(function(){
    process.exit()
  })
} else {
  var runner = false
  if (!runner && !args._.length || Number.isInteger(args._[0])) {
    runner = true
    drawLogo()
    lib.list(function(err){
      process.exit()
    })
  }

  if(!runner && args._.length && args._[0] === 'remove'){
    runner=true
   lib.remove(function(err){
      if(err) console.log(err)
      process.exit()
    }) 
  }

  if(!runner && args._.length >= 2 && (args._[0].indexOf('h') >= 0 || args._[0].indexOf('H') >= 0 || args._[0].indexOf('m') >= 0 || args._[0].indexOf('M') >= 0 || args._[0].indexOf(':') >= 0) ){
    runner = true
    lib.register(function(err){
      if(err) console.log(err)
      process.exit()
    })
  }
}









